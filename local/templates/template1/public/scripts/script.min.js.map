{"version":3,"sources":["captcha.js","cookie.js","form.js","map.js","menu.js","slider.js"],"names":["getScript","url","Promise","resolve","reject","script","document","createElement","src","async","onerror","onload","onreadystatechange","loadState","this","readyState","head","appendChild","addEventListener","publicKey","fetch","then","response","json","window","captchaPublicKey","catch","console","error","setCookie","name","value","path","cookie_string","escape","Date","now","toGMTString","cookie","getCookie","cookie_name","results","match","unescape","cookieNotification","querySelector","agreeButton","classList","remove","add","instance","querySelectorAll","forEach","elem","Vue","directive","VueMask","VueMaskDirective","form","el","data","submitURL","submitted","state","invalid","phone","phoneIncorrect","email","emailIncorrect","mounted","$el","action","methods","submit","checkForm","Object","assign","formData","FormData","keys","key","append","method","body","status","ok","err","log","validation","message","validPhone","validEmail","$forceUpdate","RegExp","test","checkCaptcha","_this","grecaptcha","execute","token","recaptchaResponse","i","mapContainer","getElementById","initMap","ymaps3","ready","YMap","YMapDefaultSchemeLayer","YMapDefaultFeaturesLayer","YMapMarker","map","location","center","zoom","content","marker","coordinates","draggable","innerHTML","addChild","zIndex","header","menu","button","toggle","sliders","thumbs","defaultSliderOptions","speed","watchOverflow","observer","resizeObserver","loop","initSlider","sliderOptions","hasAttribute","autoplay","delay","disableOnInteraction","pauseOnMouseEnter","breakpoints","slidesPerView","spaceBetween","navigation","nextEl","prevEl","pagination","type","clickable","on","init","lg","lightGallery","plugins","lgZoom","lgVideo","lgThumbnail","selector","download","actualSize","showZoomInOutIcons","infiniteZoom","exThumbImage","autoplayVideoOnSlide","gotoNextSlideOnVideoEnd","mobileSettings","showCloseIcon","controls","swiper","slideTo","index","centeredSlides","Swiper","length"],"mappings":"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","file":"script.min.js","sourcesContent":["const getScript = url => new Promise((resolve, reject) => {\n  const script = document.createElement('script')\n  script.src = url\n  script.async = true\n\n  script.onerror = reject\n\n  script.onload = script.onreadystatechange = function () {\n    const loadState = this.readyState\n\n    if (loadState && loadState !== 'loaded' && loadState !== 'complete') return\n\n    script.onload = script.onreadystatechange = null\n\n    resolve()\n  }\n\n  document.head.appendChild(script)\n});\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  let publicKey = '';\n  fetch('/local/templates/template1/ajax/recaptcha.php')\n    .then(response => response.json())\n    .then(json => {\n      publicKey = json.publicKey;\n      window.captchaPublicKey = publicKey;\n      getScript('https://www.google.com/recaptcha/api.js?render=' + publicKey)\n        .catch(() => {\n          console.error('Could not load script')\n        })\n    })\n\n});\n","window.setCookie = (name, value, path = '/') => {\r\n  let cookie_string = name + '=' + escape(value);\r\n\r\n  const expires = new Date(Date.now() + 86400e3);\r\n  cookie_string += '; expires=' + expires.toGMTString();\r\n  cookie_string += '; path=' + escape(path);\r\n\r\n  document.cookie = cookie_string;\r\n};\r\n\r\nwindow.getCookie = (cookie_name) => {\r\n  const results = document.cookie.match('(^|;) ?' + cookie_name + '=([^;]*)(;|$)');\r\n\r\n  if (results) {\r\n    return (unescape(results[2]));\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const cookieNotification = document.querySelector('.cookie-notification');\r\n\r\n  if (!cookieNotification) return;\r\n\r\n  const agreeButton = cookieNotification.querySelector('[data-agree]');\r\n\r\n  if (!getCookie('_agreement-cookie')) {\r\n    cookieNotification.classList.remove('cookie-notification--hide');\r\n  }\r\n\r\n  agreeButton.addEventListener('click', () => {\r\n    setCookie('_agreement-cookie', 'y', '/');\r\n    cookieNotification.classList.add('cookie-notification--hide');\r\n  });\r\n});\r\n","document.addEventListener('DOMContentLoaded', () => {\r\n  const instance = document.querySelectorAll('[data-vue]');\r\n\r\n  if (!instance) return;\r\n\r\n  const initialize = () => {\r\n    instance.forEach((elem) => {\r\n      Vue.directive('mask', VueMask.VueMaskDirective);\r\n      \r\n      const form = new Vue({\r\n        el: elem,\r\n        data: {\r\n          data: {},\r\n          submitURL: '',\r\n          submitted: false,\r\n          state: '',\r\n          invalid: {\r\n            name: false,\r\n            phone: false,\r\n            phoneIncorrect: false,\r\n            email: false,\r\n            emailIncorrect: false,\r\n          },\r\n          error: false,\r\n        },\r\n        mounted: function () {\r\n          this.submitURL = this.$el.action;\r\n        },\r\n        methods: {\r\n          submit: function () {\r\n            if (this.checkForm()) {\r\n              const data = Object.assign({}, this.data);\r\n              const formData = new FormData();\r\n\r\n              Object.keys(data).forEach(key => {\r\n                if (data[key] === true) {\r\n                  data[key] = 'Да';\r\n                }\r\n                formData.append(key, data[key]);\r\n              });\r\n\r\n              this.submitted = true;\r\n              this.error = false;\r\n\r\n              fetch(this.submitURL, {\r\n                method: 'POST',\r\n                body: formData\r\n              })\r\n                .then((response) => {\r\n                  this.state = (response.status === 200) ? 'SUCCESS' : '';\r\n\r\n                  if (!response.ok) {\r\n                    this.submitted = false;\r\n                    this.error = true;\r\n                  }\r\n                }).catch((err) => {\r\n                console.log(err);\r\n              });\r\n            }\r\n          },\r\n          checkForm: function () {\r\n            let validation = true;\r\n\r\n            this.invalid.name = false;\r\n            this.invalid.phone = false;\r\n            this.invalid.phoneIncorrect = false;\r\n            this.invalid.email = false;\r\n            this.invalid.emailIncorrect = false;\r\n            this.invalid.message = false;\r\n\r\n            if (!this.data.name) {\r\n              this.invalid.name = true;\r\n              validation = false;\r\n            }\r\n\r\n            if (!this.data.phone) {\r\n              this.invalid.phone = true;\r\n              validation = false;\r\n            }\r\n\r\n            if (this.data.phone && !this.validPhone(this.data.phone)) {\r\n              this.invalid.phoneIncorrect = true;\r\n              validation = false;\r\n            }\r\n\r\n            if (!this.data.email) {\r\n              this.invalid.email = true;\r\n              validation = false;\r\n            }\r\n\r\n            if (this.data.email && !this.validEmail(this.data.email)) {\r\n              this.invalid.emailIncorrect = true;\r\n              validation = false;\r\n            }\r\n\r\n            if (!this.data.message) {\r\n              this.invalid.message = true;\r\n              validation = false;\r\n            }\r\n\r\n            if (!validation) {\r\n              form.$forceUpdate();\r\n            }\r\n\r\n            return validation;\r\n          },\r\n          validPhone: function (phone) {\r\n            const regExp = new RegExp(\"^((\\\\d|\\\\+\\\\d)[\\\\- ]?)?(\\\\(?\\\\d{3}\\\\)?[\\\\- ]?)?[\\\\d\\\\- ]{7,10}$\");\r\n            return regExp.test(phone);\r\n          },\r\n          validEmail: function (email) {\r\n            const regExp = new RegExp(\"^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]+$\");\r\n            return regExp.test(email);\r\n          },\r\n          checkCaptcha: function () {\r\n            const _this = this;\r\n            if ('grecaptcha' in window) {\r\n              grecaptcha.execute(window.captchaPublicKey, {action: 'submit'}).then(function (token) {\r\n                _this.data.recaptchaResponse = (token) ? token : '';\r\n                _this.submit();\r\n              })\r\n            }\r\n          },\r\n        },\r\n      });\r\n    })\r\n  };\r\n\r\n  initialize();\r\n});\r\n","const mapContainer = document.getElementById(\"map\");\r\nasync function initMap() {\r\n  await ymaps3.ready;\r\n  const { YMap, YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer, YMapMarker } =\r\n    ymaps3;\r\n\r\n  const map = new YMap(document.getElementById(\"map\"), {\r\n    location: {\r\n      center: [39.024074, 45.070148],\r\n      zoom: 16,\r\n    },\r\n  });\r\n\r\n  const content = document.createElement(\"div\");\r\n  const marker = new YMapMarker(\r\n    {\r\n      coordinates: [39.024074, 45.070148],\r\n      draggable: true,\r\n    },\r\n    content\r\n  );\r\n  content.innerHTML = `\r\n  <div class=\"map__marker-wrapper\">\r\n    <div class=\"map__marker\">\r\n      <span class=\"visually-hidden\">AngelaVladi</span>\r\n      <svg class=\"map__logo\" viewBox=\"0 0 100 50\" width=\"150\" height=\"75\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <use xlink:href=\"/local/templates/template1/public/images/sprite.svg#angelavladi-logo\" />\r\n      </svg>\r\n      <p>Краснодар, ул. Восточно-Кругликовская, 65</p>\r\n    </div>\r\n  </div>\r\n  `;\r\n\r\n  map.addChild(new YMapDefaultSchemeLayer());\r\n  map.addChild(new YMapDefaultFeaturesLayer({ zIndex: 1800 }));\r\n  map.addChild(marker);\r\n}\r\n\r\nif (mapContainer !== null) {\r\n  initMap(); \r\n}\r\n","const header = document.querySelector(\".header\");\r\nconst menu = header.querySelector(\".navigation__list\");\r\nconst button = header.querySelector(\".navigation__button\");\r\n\r\nif (button) {\r\n  button.addEventListener(\"click\", () => {\r\n    menu.classList.toggle(\"navigation__list--hidden\");\r\n    button.classList.toggle(\"button--menu-close\");\r\n  });\r\n}\r\n","const sliders = document.querySelectorAll(\".swiper-container\");\r\nconst thumbs = document.querySelector(\".slider-thumbs\");\r\n\r\nconst defaultSliderOptions = {\r\n  speed: 2200,\r\n  watchOverflow: true,\r\n  observer: true,\r\n  resizeObserver: true,\r\n  loop: true,\r\n};\r\n\r\nconst initSlider = (elem) => {\r\n  if (!elem) return;\r\n\r\n  const sliderOptions = {...defaultSliderOptions};\r\n\r\n  if (elem.hasAttribute(\"data-autoplay\")) {\r\n    sliderOptions.autoplay = {\r\n      delay: 4000,\r\n      disableOnInteraction: false,\r\n      pauseOnMouseEnter: true,\r\n    };\r\n  }\r\n\r\n  if (elem.hasAttribute(\"data-slides\")) {\r\n    sliderOptions.breakpoints = {\r\n      320: {\r\n        slidesPerView: 1,\r\n        spaceBetween: 20,\r\n      },\r\n      550: {\r\n        slidesPerView: 2,\r\n        spaceBetween: 20,\r\n      },\r\n      1024: {\r\n        slidesPerView: 3,\r\n        spaceBetween: 20,\r\n      },\r\n      1280: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 20,\r\n      },\r\n      1440: {\r\n        slidesPerView: 5,\r\n        spaceBetween: 30,\r\n      },\r\n    };\r\n  }\r\n\r\n  if (elem.hasAttribute(\"data-navigation\")) {\r\n    sliderOptions.navigation = {\r\n      nextEl: \".button--right\",\r\n      prevEl: \".button--left\",\r\n    };\r\n  }\r\n\r\n  if (elem.hasAttribute(\"data-pagination\")) {\r\n    sliderOptions.pagination = {\r\n      el: \".slider-pagination\",\r\n      type: \"bullets\",\r\n      clickable: true,\r\n    };\r\n  }\r\n\r\n  if (elem.hasAttribute(\"data-gallery\")) {\r\n    sliderOptions.on = {\r\n      init: function () {\r\n        const lg = lightGallery(elem, {\r\n          plugins: [lgZoom, lgVideo, lgThumbnail],\r\n          selector: \"li\",\r\n          speed: 500,\r\n          download: false,\r\n          actualSize: false,\r\n          showZoomInOutIcons: true,\r\n          infiniteZoom: true,\r\n          exThumbImage: 'data-thumb',\r\n          autoplayVideoOnSlide: true,\r\n          gotoNextSlideOnVideoEnd: false,\r\n          mobileSettings: {\r\n            showCloseIcon: true,\r\n            controls: true,\r\n          },\r\n        });\r\n\r\n        elem.addEventListener(\"lgBeforeClose\", () => {\r\n          swiper.slideTo(lg.index, 0)\r\n        });\r\n      },\r\n    }\r\n  }\r\n\r\n  if (elem.hasAttribute(\"data-with-thumbs\")) {\r\n    sliderOptions.thumbs = {\r\n      swiper: thumbs,\r\n    };\r\n  }\r\n\r\n  if (elem.hasAttribute(\"data-thumb\")) {\r\n    sliderOptions.centeredSlides = true;\r\n    sliderOptions.breakpoints = {\r\n      320: {\r\n        slidesPerView: 4,\r\n        spaceBetween: 5,\r\n      },\r\n      1280: {\r\n        slidesPerView: 5,\r\n        spaceBetween: 10,\r\n      },\r\n    };\r\n  }\r\n\r\n  const swiper = new Swiper(elem, sliderOptions);\r\n};\r\n\r\nif (sliders.length > 0) {\r\n  sliders.forEach((elem) => {\r\n    initSlider(elem);\r\n  });\r\n}\r\n"]}